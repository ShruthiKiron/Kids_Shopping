<%- include('../includes/admin/adminHead')%>

    <div id="main-wrapper">

        <%- include('../includes/admin/adminNav')%>

        <%- include('../includes/admin/adminSidebar')%>

        <div class="content-body">
           
            <div class="container-fluid">
               
                <h3 id="pgHead">ORDER STATISTICS</h3>
    <label for="timeRange">Select Time Range:</label>
    <select id="timeRange">
        <option value="yearly">Yearly</option>
        <option value="monthly">Monthly</option>
        <option value="weekly">Weekly</option>
        <option value="daily">Daily</option>
    </select>
    <canvas id="orderChart"></canvas>



    <div>
        <h3>Top Selling Products</h3>
        <ul id="topSellingProducts"></ul>
    </div>

    <div>
        <h3>Top Selling Categories</h3>
        <ul id="topSellingCategories"></ul>
    </div>

            </div>
        </div>
  
        <script>
            document.addEventListener("DOMContentLoaded", function() {
                const timeRangeSelect = document.getElementById("timeRange");
                const orderChartCanvas = document.getElementById("orderChart").getContext("2d");
                const topSellingProductsList = document.getElementById("topSellingProducts");
                 const topSellingCategoriesList = document.getElementById("topSellingCategories");
                let orderChart;
        
                function fetchDataAndUpdateChart(selectedTimeRange) {
                    fetch(`/dashboard-stat?timeRange=${selectedTimeRange}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.json();
                        })
                        .then(data => {
                            if (!data.labels || !data.data) {
                                throw new Error('Missing labels or data in response');
                            }
                            updateChart(data.labels, data.data, selectedTimeRange);
                        })
                        .catch(error => console.error("Error fetching data:", error));

                        // Fetch top selling products and categories
                    fetch(`/top-selling-products`)
            .then(response => response.json())
            .then(data => {
                topSellingProductsList.innerHTML = "";
                data.forEach(product => {
                    const listItem = document.createElement("li");
                    listItem.textContent = `${product.productName} - ${product.count}`; 
                    topSellingProductsList.appendChild(listItem);
                });
            })
            .catch(error => console.error("Error fetching top selling products:", error));

                fetch(`/top-selling-categories`)
                    .then(response => response.json())
                    .then(data => {
                        topSellingCategoriesList.innerHTML = "";
                        data.forEach(category => {
                            const listItem = document.createElement("li");
                            listItem.textContent = `${category.category} - ${category.count}`;
                            topSellingCategoriesList.appendChild(listItem);
                        });
                    })
                    .catch(error => console.error("Error fetching top selling categories:", error));
            


                }
        
                timeRangeSelect.addEventListener("change", function() {
                    const selectedTimeRange = timeRangeSelect.value;
                    fetchDataAndUpdateChart(selectedTimeRange);
                });
        
                const defaultTimeRange = "yearly"; 
                timeRangeSelect.value = defaultTimeRange;
                fetchDataAndUpdateChart(defaultTimeRange);
        
                function updateChart(labels, data, selectedTimeRange) {
                    if (orderChart) {
                        orderChart.destroy();
                    }
                    orderChart = new Chart(orderChartCanvas, {
                        type: "line",
                        data: {
                            labels: labels,
                            datasets: [{
                                label: "Sales",
                                data: data,
                                fill: false,
                                borderColor: "rgba(75, 192, 192, 1)",
                                borderWidth: 2
                            }]
                        },
                        options: {
                            scales: {
                                x: {
                                    title: {
                                        display: true,
                                        text: selectedTimeRange === "yearly" ? "Year" : (selectedTimeRange === "monthly" ? "Month" : (selectedTimeRange === "weekly" ? "Week" : "Day"))
                                    }
                                },
                                y: {
                                    title: {
                                        display: true,
                                        text: "Sales"
                                    },
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                }
            });
        </script>
        
        
</div>
<%-include('../includes/admin/adminEnd')%>

